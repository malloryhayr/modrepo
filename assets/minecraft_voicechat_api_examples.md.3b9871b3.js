import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.8adf7a9a.js";const u=JSON.parse('{"title":"Examples","titleTemplate":"Simple Voice Chat","description":"","frontmatter":{"titleTemplate":"Simple Voice Chat"},"headers":[],"relativePath":"minecraft/voicechat/api/examples.md","filePath":"minecraft/voicechat/api/examples.md"}'),p={name:"minecraft/voicechat/api/examples.md"},o=l(`<h1 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h1><p>For simplicity, all examples are using <a href="https://minecraft.fandom.com/wiki/Obfuscation_map" target="_blank" rel="noreferrer">official mappings</a>.</p><h2 id="groups" tabindex="-1">Groups <a class="header-anchor" href="#groups" aria-label="Permalink to &quot;Groups&quot;">​</a></h2><p><strong>Creating a group</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Group group </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">groupBuilder</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">setPersistent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// Doesn&#39;t remove the group once all players left</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">setName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;My Persistent Group&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// The name of the group</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">setPassword</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SuperSecretPassword&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// The password of the group</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">setType</span><span style="color:#E1E4E8;">(Group.Type.ISOLATED) </span><span style="color:#6A737D;">// The type of the group (NORMAL, OPEN, ISOLATED)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Group group </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">groupBuilder</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">setPersistent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// Doesn&#39;t remove the group once all players left</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">setName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;My Persistent Group&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// The name of the group</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">setPassword</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SuperSecretPassword&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// The password of the group</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">setType</span><span style="color:#24292E;">(Group.Type.ISOLATED) </span><span style="color:#6A737D;">// The type of the group (NORMAL, OPEN, ISOLATED)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span></code></pre></div><p>If the group is set to be persistent, the group will be created once the <code>.build()</code> method is called. If the group is not persistent, the group will be created once the first player is added.</p><p><strong>Adding a player to a group</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">Group group </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">Player player </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">VoicechatConnection connection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">getConnectionOf</span><span style="color:#E1E4E8;">(player.</span><span style="color:#B392F0;">getUUID</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (connection </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Player does not exist</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (connection.</span><span style="color:#B392F0;">getGroup</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Player is already in a group</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">connection.</span><span style="color:#B392F0;">setGroup</span><span style="color:#E1E4E8;">(group); </span><span style="color:#6A737D;">// Add player to the group</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">Group group </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">Player player </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">VoicechatConnection connection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">getConnectionOf</span><span style="color:#24292E;">(player.</span><span style="color:#6F42C1;">getUUID</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (connection </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// Player does not exist</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (connection.</span><span style="color:#6F42C1;">getGroup</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// Player is already in a group</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">connection.</span><span style="color:#6F42C1;">setGroup</span><span style="color:#24292E;">(group); </span><span style="color:#6A737D;">// Add player to the group</span></span></code></pre></div><h2 id="audio-channels" tabindex="-1">Audio Channels <a class="header-anchor" href="#audio-channels" aria-label="Permalink to &quot;Audio Channels&quot;">​</a></h2><p><strong>Creating a static audio channel</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">ServerLevel level </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">ServerPlayer player </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">Vec3 pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">String category </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...; </span><span style="color:#6A737D;">// The category needs to be registered - See &quot;Registering a volume category&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">UUID channelID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> UUID.</span><span style="color:#B392F0;">randomUUID</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">VoicechatConnection playerConnection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">getConnectionOf</span><span style="color:#E1E4E8;">(player.</span><span style="color:#B392F0;">getUUID</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">StaticAudioChannel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">createStaticAudioChannel</span><span style="color:#E1E4E8;">(channelID, api.</span><span style="color:#B392F0;">fromServerLevel</span><span style="color:#E1E4E8;">(level), playerConnection);</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (channel </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">channel.</span><span style="color:#B392F0;">setCategory</span><span style="color:#E1E4E8;">(category); </span><span style="color:#6A737D;">// The category of the audio channel</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">ServerLevel level </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">ServerPlayer player </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">Vec3 pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">String category </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...; </span><span style="color:#6A737D;">// The category needs to be registered - See &quot;Registering a volume category&quot;</span></span>
<span class="line"><span style="color:#24292E;">UUID channelID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> UUID.</span><span style="color:#6F42C1;">randomUUID</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">VoicechatConnection playerConnection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">getConnectionOf</span><span style="color:#24292E;">(player.</span><span style="color:#6F42C1;">getUUID</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">StaticAudioChannel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">createStaticAudioChannel</span><span style="color:#24292E;">(channelID, api.</span><span style="color:#6F42C1;">fromServerLevel</span><span style="color:#24292E;">(level), playerConnection);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (channel </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">channel.</span><span style="color:#6F42C1;">setCategory</span><span style="color:#24292E;">(category); </span><span style="color:#6A737D;">// The category of the audio channel</span></span></code></pre></div><p>This will create a static audio channel that can be heard by the player that was provided in the <code>.createStaticAudioChannel(...)</code> method. Static audio channel audio is the same as the audio in groups.</p><p><strong>Creating a locational audio channel</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">ServerLevel level </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">Vec3 pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">String category </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...; </span><span style="color:#6A737D;">// The category needs to be registered - See &quot;Registering a volume category&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">UUID channelID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> UUID.</span><span style="color:#B392F0;">randomUUID</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">LocationalAudioChannel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">createLocationalAudioChannel</span><span style="color:#E1E4E8;">(channelID, api.</span><span style="color:#B392F0;">fromServerLevel</span><span style="color:#E1E4E8;">(level), api.</span><span style="color:#B392F0;">createPosition</span><span style="color:#E1E4E8;">(pos.x, pos.y, pos.z));</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (channel </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">channel.</span><span style="color:#B392F0;">setCategory</span><span style="color:#E1E4E8;">(category); </span><span style="color:#6A737D;">// The category of the audio channel</span></span>
<span class="line"><span style="color:#E1E4E8;">channel.</span><span style="color:#B392F0;">setDistance</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// The distance in which the audio channel can be heard</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">ServerLevel level </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">Vec3 pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">String category </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...; </span><span style="color:#6A737D;">// The category needs to be registered - See &quot;Registering a volume category&quot;</span></span>
<span class="line"><span style="color:#24292E;">UUID channelID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> UUID.</span><span style="color:#6F42C1;">randomUUID</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">LocationalAudioChannel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">createLocationalAudioChannel</span><span style="color:#24292E;">(channelID, api.</span><span style="color:#6F42C1;">fromServerLevel</span><span style="color:#24292E;">(level), api.</span><span style="color:#6F42C1;">createPosition</span><span style="color:#24292E;">(pos.x, pos.y, pos.z));</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (channel </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">channel.</span><span style="color:#6F42C1;">setCategory</span><span style="color:#24292E;">(category); </span><span style="color:#6A737D;">// The category of the audio channel</span></span>
<span class="line"><span style="color:#24292E;">channel.</span><span style="color:#6F42C1;">setDistance</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// The distance in which the audio channel can be heard</span></span></code></pre></div><p>This will create a locational audio channel that can be heard by all players in the range that was defined by <code>.setDistance(distance)</code>.</p><p><strong>Creating an entity audio channel</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">ServerLevel level </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">Entity entity </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">String category </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...; </span><span style="color:#6A737D;">// The category needs to be registered - See &quot;Registering a volume category&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">UUID channelID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> UUID.</span><span style="color:#B392F0;">randomUUID</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">EntityAudioChannel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">createEntityAudioChannel</span><span style="color:#E1E4E8;">(channelID, api.</span><span style="color:#B392F0;">fromEntity</span><span style="color:#E1E4E8;">(entity));</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (channel </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">channel.</span><span style="color:#B392F0;">setCategory</span><span style="color:#E1E4E8;">(category); </span><span style="color:#6A737D;">// The category of the audio channel</span></span>
<span class="line"><span style="color:#E1E4E8;">channel.</span><span style="color:#B392F0;">setDistance</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// The distance in which the audio channel can be heard</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">ServerLevel level </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">Entity entity </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">String category </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...; </span><span style="color:#6A737D;">// The category needs to be registered - See &quot;Registering a volume category&quot;</span></span>
<span class="line"><span style="color:#24292E;">UUID channelID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> UUID.</span><span style="color:#6F42C1;">randomUUID</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">EntityAudioChannel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">createEntityAudioChannel</span><span style="color:#24292E;">(channelID, api.</span><span style="color:#6F42C1;">fromEntity</span><span style="color:#24292E;">(entity));</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (channel </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">channel.</span><span style="color:#6F42C1;">setCategory</span><span style="color:#24292E;">(category); </span><span style="color:#6A737D;">// The category of the audio channel</span></span>
<span class="line"><span style="color:#24292E;">channel.</span><span style="color:#6F42C1;">setDistance</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// The distance in which the audio channel can be heard</span></span></code></pre></div><p>This will create an entity audio channel that can be heard by all players in the range that was defined by <code>.setDistance(distance)</code>. The source of the audio channel will be the entity that was provided in the <code>.createEntityAudioChannel(...)</code> method.</p><p><strong>Playing audio to audio channels</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">LocationalAudioChannel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...; </span><span style="color:#6A737D;">// Can also be a StaticAudioChannel or EntityAudioChannel</span></span>
<span class="line"><span style="color:#F97583;">short</span><span style="color:#E1E4E8;">[] audio </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...; </span><span style="color:#6A737D;">// The audio samples in 48kHz 16-bit PCM format</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">AudioPlayer player </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">createAudioPlayer</span><span style="color:#E1E4E8;">(channel, api.</span><span style="color:#B392F0;">createEncoder</span><span style="color:#E1E4E8;">(), audio);</span></span>
<span class="line"><span style="color:#E1E4E8;">player.</span><span style="color:#B392F0;">startPlaying</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">player.</span><span style="color:#B392F0;">stopPlaying</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Stop playing the audio</span></span>
<span class="line"><span style="color:#E1E4E8;">player.</span><span style="color:#B392F0;">isPlaying</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Returns true if the audio is currently playing</span></span>
<span class="line"><span style="color:#E1E4E8;">player.</span><span style="color:#B392F0;">isStopped</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Returns true if the audio is finished playing or was stopped</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">player.</span><span style="color:#B392F0;">setOnStopped</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// This will be called once the audio is finished playing or was stopped</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">LocationalAudioChannel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...; </span><span style="color:#6A737D;">// Can also be a StaticAudioChannel or EntityAudioChannel</span></span>
<span class="line"><span style="color:#D73A49;">short</span><span style="color:#24292E;">[] audio </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...; </span><span style="color:#6A737D;">// The audio samples in 48kHz 16-bit PCM format</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">AudioPlayer player </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">createAudioPlayer</span><span style="color:#24292E;">(channel, api.</span><span style="color:#6F42C1;">createEncoder</span><span style="color:#24292E;">(), audio);</span></span>
<span class="line"><span style="color:#24292E;">player.</span><span style="color:#6F42C1;">startPlaying</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">player.</span><span style="color:#6F42C1;">stopPlaying</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Stop playing the audio</span></span>
<span class="line"><span style="color:#24292E;">player.</span><span style="color:#6F42C1;">isPlaying</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Returns true if the audio is currently playing</span></span>
<span class="line"><span style="color:#24292E;">player.</span><span style="color:#6F42C1;">isStopped</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Returns true if the audio is finished playing or was stopped</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">player.</span><span style="color:#6F42C1;">setOnStopped</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// This will be called once the audio is finished playing or was stopped</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>This will play the audio to the audio channel in a separate thread. This thread will automatically send the audio packets and will respect the audio pace.</p><h2 id="volume-categories" tabindex="-1">Volume Categories <a class="header-anchor" href="#volume-categories" aria-label="Permalink to &quot;Volume Categories&quot;">​</a></h2><p><strong>Registering a volume category</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VoicechatPlugin</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> String MUSIC_DISC_CATEGORY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;music_discs&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// This ID must be unique. If a category with the same ID already exists, the category will be replaced</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">registerEvents</span><span style="color:#E1E4E8;">(EventRegistration </span><span style="color:#FFAB70;">registration</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        registration.</span><span style="color:#B392F0;">registerEvent</span><span style="color:#E1E4E8;">(VoicechatServerStartedEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">onServerStarted);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onServerStarted</span><span style="color:#E1E4E8;">(VoicechatServerStartedEvent </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.</span><span style="color:#B392F0;">getVoicechat</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        VolumeCategory musicDiscs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">volumeCategoryBuilder</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">setId</span><span style="color:#E1E4E8;">(MUSIC_DISC_CATEGORY)</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">setName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Music discs&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">setDescription</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;The volume of all custom music discs&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">setIcon</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getIcon</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;category_music_discs.png&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        api.</span><span style="color:#B392F0;">registerVolumeCategory</span><span style="color:#E1E4E8;">(musicDiscs);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Nullable</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">[][] </span><span style="color:#B392F0;">getIcon</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">path</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            Enumeration&lt;</span><span style="color:#F97583;">URL</span><span style="color:#E1E4E8;">&gt; resources </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Plugin.class.</span><span style="color:#B392F0;">getClassLoader</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getResources</span><span style="color:#E1E4E8;">(path);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (resources.</span><span style="color:#B392F0;">hasMoreElements</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                BufferedImage bufferedImage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ImageIO.</span><span style="color:#B392F0;">read</span><span style="color:#E1E4E8;">(resources.</span><span style="color:#B392F0;">nextElement</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">openStream</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (bufferedImage.</span><span style="color:#B392F0;">getWidth</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">continue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (bufferedImage.</span><span style="color:#B392F0;">getHeight</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">continue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">[][] image </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; x </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> bufferedImage.</span><span style="color:#B392F0;">getWidth</span><span style="color:#E1E4E8;">(); x</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; y </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> bufferedImage.</span><span style="color:#B392F0;">getHeight</span><span style="color:#E1E4E8;">(); y</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        image[x][y] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> bufferedImage.</span><span style="color:#B392F0;">getRGB</span><span style="color:#E1E4E8;">(x, y);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> image;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Plugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VoicechatPlugin</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String MUSIC_DISC_CATEGORY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;music_discs&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// This ID must be unique. If a category with the same ID already exists, the category will be replaced</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">registerEvents</span><span style="color:#24292E;">(EventRegistration </span><span style="color:#E36209;">registration</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        registration.</span><span style="color:#6F42C1;">registerEvent</span><span style="color:#24292E;">(VoicechatServerStartedEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">onServerStarted);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onServerStarted</span><span style="color:#24292E;">(VoicechatServerStartedEvent </span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.</span><span style="color:#6F42C1;">getVoicechat</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        VolumeCategory musicDiscs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">volumeCategoryBuilder</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">setId</span><span style="color:#24292E;">(MUSIC_DISC_CATEGORY)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">setName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Music discs&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">setDescription</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;The volume of all custom music discs&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">setIcon</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getIcon</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;category_music_discs.png&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        api.</span><span style="color:#6F42C1;">registerVolumeCategory</span><span style="color:#24292E;">(musicDiscs);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Nullable</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[][] </span><span style="color:#6F42C1;">getIcon</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">path</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            Enumeration&lt;</span><span style="color:#D73A49;">URL</span><span style="color:#24292E;">&gt; resources </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Plugin.class.</span><span style="color:#6F42C1;">getClassLoader</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getResources</span><span style="color:#24292E;">(path);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (resources.</span><span style="color:#6F42C1;">hasMoreElements</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                BufferedImage bufferedImage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ImageIO.</span><span style="color:#6F42C1;">read</span><span style="color:#24292E;">(resources.</span><span style="color:#6F42C1;">nextElement</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">openStream</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (bufferedImage.</span><span style="color:#6F42C1;">getWidth</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (bufferedImage.</span><span style="color:#6F42C1;">getHeight</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[][] image </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; x </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> bufferedImage.</span><span style="color:#6F42C1;">getWidth</span><span style="color:#24292E;">(); x</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; y </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> bufferedImage.</span><span style="color:#6F42C1;">getHeight</span><span style="color:#24292E;">(); y</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                        image[x][y] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> bufferedImage.</span><span style="color:#6F42C1;">getRGB</span><span style="color:#24292E;">(x, y);</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> image;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>Setting the category in an audio channel</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">ServerLevel level </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">Vec3 pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">UUID channelID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> UUID.</span><span style="color:#B392F0;">randomUUID</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">LocationalAudioChannel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">createLocationalAudioChannel</span><span style="color:#E1E4E8;">(channelID, api.</span><span style="color:#B392F0;">fromServerLevel</span><span style="color:#E1E4E8;">(level), api.</span><span style="color:#B392F0;">createPosition</span><span style="color:#E1E4E8;">(pos.x, pos.y, pos.z));</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (channel </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">channel.</span><span style="color:#B392F0;">setCategory</span><span style="color:#E1E4E8;">(MUSIC_DISC_CATEGORY); </span><span style="color:#6A737D;">// The category of the audio channel (Registered in the previous code snippet)</span></span>
<span class="line"><span style="color:#E1E4E8;">channel.</span><span style="color:#B392F0;">setDistance</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// The distance in which the audio channel can be heard</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">ServerLevel level </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">Vec3 pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">UUID channelID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> UUID.</span><span style="color:#6F42C1;">randomUUID</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">LocationalAudioChannel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">createLocationalAudioChannel</span><span style="color:#24292E;">(channelID, api.</span><span style="color:#6F42C1;">fromServerLevel</span><span style="color:#24292E;">(level), api.</span><span style="color:#6F42C1;">createPosition</span><span style="color:#24292E;">(pos.x, pos.y, pos.z));</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (channel </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">channel.</span><span style="color:#6F42C1;">setCategory</span><span style="color:#24292E;">(MUSIC_DISC_CATEGORY); </span><span style="color:#6A737D;">// The category of the audio channel (Registered in the previous code snippet)</span></span>
<span class="line"><span style="color:#24292E;">channel.</span><span style="color:#6F42C1;">setDistance</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// The distance in which the audio channel can be heard</span></span></code></pre></div><h2 id="audio-senders" tabindex="-1">Audio Senders <a class="header-anchor" href="#audio-senders" aria-label="Permalink to &quot;Audio Senders&quot;">​</a></h2><p>Audio senders act as a player that is sending audio to the server. This only works for players that don&#39;t actually have the mod installed. Only one audio sender can be registered per player. The registration of the audio sender will fail if the player already has an audio sender registered or the player is using the voice chat mod.</p><p><strong>Registering an audio sender and sending audio</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">VoicechatServerApi api </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">VoicechatConnection connection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...; </span><span style="color:#6A737D;">// The connection of the player that should act as the sender of the audio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">AudioSender sender </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> api.</span><span style="color:#B392F0;">createAudioSender</span><span style="color:#E1E4E8;">(connection);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">api.</span><span style="color:#B392F0;">registerAudioSender</span><span style="color:#E1E4E8;">(sender)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// The audio sender could not be registered</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">sender.</span><span style="color:#B392F0;">whispering</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Acts as the player would be whispering</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">sender.</span><span style="color:#B392F0;">canSend</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// The audio sender can not send audio</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// This either means the player has the voice chat mod installed or the player already has an audio sender registered</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (...) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] opusEncodedAudioData </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ...; </span><span style="color:#6A737D;">// The opus encoded audio samples</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">sender.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(opusEncodedAudioData)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// The audio sender can not send audio</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Wait for the next audio packet to be sent</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// You need to time the audio packets yourself</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// If you send audio packets too fast, some packets may be discarded by the client</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">sender.</span><span style="color:#B392F0;">reset</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Resets the audio sender, indicating to the client that the end of a continuous audio stream was reached</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">api.</span><span style="color:#B392F0;">unregisterAudioSender</span><span style="color:#E1E4E8;">(sender); </span><span style="color:#6A737D;">// Unregisters the audio sender. If if its not unregistered, no other plugins can register an audio sender for this player</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">VoicechatServerApi api </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...;</span></span>
<span class="line"><span style="color:#24292E;">VoicechatConnection connection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...; </span><span style="color:#6A737D;">// The connection of the player that should act as the sender of the audio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">AudioSender sender </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> api.</span><span style="color:#6F42C1;">createAudioSender</span><span style="color:#24292E;">(connection);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">api.</span><span style="color:#6F42C1;">registerAudioSender</span><span style="color:#24292E;">(sender)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// The audio sender could not be registered</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">sender.</span><span style="color:#6F42C1;">whispering</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Acts as the player would be whispering</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">sender.</span><span style="color:#6F42C1;">canSend</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// The audio sender can not send audio</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// This either means the player has the voice chat mod installed or the player already has an audio sender registered</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (...) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] opusEncodedAudioData </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ...; </span><span style="color:#6A737D;">// The opus encoded audio samples</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">sender.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(opusEncodedAudioData)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// The audio sender can not send audio</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Wait for the next audio packet to be sent</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// You need to time the audio packets yourself</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// If you send audio packets too fast, some packets may be discarded by the client</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">sender.</span><span style="color:#6F42C1;">reset</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Resets the audio sender, indicating to the client that the end of a continuous audio stream was reached</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">api.</span><span style="color:#6F42C1;">unregisterAudioSender</span><span style="color:#24292E;">(sender); </span><span style="color:#6A737D;">// Unregisters the audio sender. If if its not unregistered, no other plugins can register an audio sender for this player</span></span></code></pre></div>`,30),e=[o];function t(c,r,E,y,i,d){return n(),a("div",null,e)}const g=s(p,[["render",t]]);export{u as __pageData,g as default};
